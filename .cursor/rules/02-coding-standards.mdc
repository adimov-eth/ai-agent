---
description:
globs:
alwaysApply: false
---
# Coding Standards

This project follows strict functional programming principles and TypeScript best practices.

## Core Principles

1. **Functional Programming**
   - No classes, only pure functions and modules
   - Immutable data structures
   - Function composition over inheritance
   - Early returns for better error handling

2. **TypeScript Standards**
   - Strict type checking enabled
   - Explicit return types on exported functions
   - Use of readonly and const assertions
   - Proper type exports in [packages/shared/types/index.ts](mdc:packages/shared/types/index.ts)

3. **Module Structure**
   - Single responsibility principle
   - Maximum 30 lines per function
   - Maximum 300 lines per file
   - Clear function and variable naming

4. **Naming Conventions**
   - camelCase for variables and functions
   - PascalCase for types and interfaces
   - UPPER_CASE for constants
   - Descriptive, action-based function names

5. **Error Handling**
   - Early returns for error conditions
   - Proper error typing
   - Consistent error messages
   - No swallowed exceptions

## Package Standards

1. **AI Package**
   - Pure functional agent implementation
   - Clear agent instructions
   - Proper error handling for API calls

2. **Telegram Package**
   - Functional bot implementation
   - Clear message handling
   - Proper error boundaries
   - Environment variable validation

3. **Shared Package**
   - Only type definitions
   - No runtime code
   - Clear type exports
   - Proper documentation
